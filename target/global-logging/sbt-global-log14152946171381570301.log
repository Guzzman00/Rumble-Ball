[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\guzzm\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\guzzm\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.10 (Azul Systems, Inc. Java 17.0.14)
[debug] Load.defaultLoad until apply took 337.381ms
[debug]           Load.loadUnit: plugins took 175.4465ms
[debug]           Load.loadUnit: defsScala took 1.1681ms
[debug] [Loading] Scanning directory C:\Users\guzzm\Desktop\rumble-ball\project
[debug]             Load.loadUnit: mkEval took 12.9197ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\guzzm\Desktop\rumble-ball\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.9181 ms
[info] loading settings for project rumble-ball-build from plugins.sbt, idea1.sbt...
[debug]               Load.resolveProject(rumble-ball-build) took 64.2541ms
[debug]             Load.loadTransitive: finalizeProject(Project(id rumble-ball-build, base: C:\Users\guzzm\Desktop\rumble-ball\project, plugins: List(<none>))) took 114.1419ms
[debug] [Loading] Done in C:\Users\guzzm\Desktop\rumble-ball\project, returning: (rumble-ball-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 556.5312ms
[debug]           Load.loadUnit: cleanEvalClasses took 18.4846ms
[debug]         Load.loadUnit(file:/C:/Users/guzzm/Desktop/rumble-ball/project/, ...) took 761.8916ms
[debug]       Load.apply: load took 958.3914ms
[debug]       Load.apply: resolveProjects took 8.6265ms
[debug]       Load.apply: finalTransforms took 127.7353ms
[debug]       Load.apply: config.delegates took 16.2891ms
[debug]       Load.apply: Def.make(settings)... took 920.5095ms
[debug]       Load.apply: structureIndex took 206.3209ms
[debug]       Load.apply: mkStreams took 2.5942ms
[info] loading project definition from C:\Users\guzzm\Desktop\rumble-ball\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4266.4256ms
[debug]     Load.loadUnit: defsScala took 0.0076ms
[debug] [Loading] Scanning directory C:\Users\guzzm\Desktop\rumble-ball
[debug]       Load.loadUnit: mkEval took 0.4084ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(org.scalajs.sbtplugin.ScalaJSPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.scalajs.sbtplugin.ScalaJSPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,org.scalajs.sbtplugin.ScalaJSPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.2662 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 100.9061ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\guzzm\Desktop\rumble-ball, plugins: List(org.scalajs.sbtplugin.ScalaJSPlugin))) took 108.5236ms
[debug] [Loading] Done in C:\Users\guzzm\Desktop\rumble-ball, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 299.3341ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.9388ms
[debug]   Load.loadUnit(file:/C:/Users/guzzm/Desktop/rumble-ball/, ...) took 4588.7269ms
[debug] Load.apply: load took 4655.7666ms
[debug] Load.apply: resolveProjects took 0.2273ms
[debug] Load.apply: finalTransforms took 103.4716ms
[debug] Load.apply: config.delegates took 0.7617ms
[debug] Load.apply: Def.make(settings)... took 435.1261ms
[debug] Load.apply: structureIndex took 110.3878ms
[debug] Load.apply: mkStreams took 0.0036ms
[info] set current project to rumble-ball (in build file:/C:/Users/guzzm/Desktop/rumble-ball/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * root / mainClass
[warn]   +- C:\Users\guzzm\Desktop\rumble-ball\build.sbt:22
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
