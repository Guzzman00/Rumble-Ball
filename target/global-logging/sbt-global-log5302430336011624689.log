[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\guzzm\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\guzzm\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.10 (Azul Systems, Inc. Java 17.0.14)
[debug] Load.defaultLoad until apply took 239.6974ms
[debug]           Load.loadUnit: plugins took 272.1731ms
[debug]           Load.loadUnit: defsScala took 0.6997ms
[debug] [Loading] Scanning directory C:\Users\guzzm\Desktop\rumble-ball\project
[debug]             Load.loadUnit: mkEval took 10.8698ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\guzzm\Desktop\rumble-ball\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 31.5526 ms
[info] loading settings for project rumble-ball-build from plugins.sbt, idea.sbt...
[debug]               Load.resolveProject(rumble-ball-build) took 59.7887ms
[debug]             Load.loadTransitive: finalizeProject(Project(id rumble-ball-build, base: C:\Users\guzzm\Desktop\rumble-ball\project, plugins: List(<none>))) took 109.762ms
[debug] [Loading] Done in C:\Users\guzzm\Desktop\rumble-ball\project, returning: (rumble-ball-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6160.2274ms
[debug]           Load.loadUnit: cleanEvalClasses took 14.2621ms
[debug]         Load.loadUnit(file:/C:/Users/guzzm/Desktop/rumble-ball/project/, ...) took 6457.533ms
[debug]       Load.apply: load took 6660.2042ms
[debug]       Load.apply: resolveProjects took 15.2781ms
[debug]       Load.apply: finalTransforms took 235.4257ms
[debug]       Load.apply: config.delegates took 23.2303ms
[debug]       Load.apply: Def.make(settings)... took 1635.5556ms
[debug]       Load.apply: structureIndex took 249.244ms
[debug]       Load.apply: mkStreams took 5.1037ms
[info] loading project definition from C:\Users\guzzm\Desktop\rumble-ball\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 13692.9181ms
[debug]     Load.loadUnit: defsScala took 0.0056ms
[debug] [Loading] Scanning directory C:\Users\guzzm\Desktop\rumble-ball
[debug]       Load.loadUnit: mkEval took 0.4947ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(org.scalajs.sbtplugin.ScalaJSPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.scalajs.sbtplugin.ScalaJSPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,org.scalajs.sbtplugin.ScalaJSPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 8.1327 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 93.7799ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\guzzm\Desktop\rumble-ball, plugins: List(org.scalajs.sbtplugin.ScalaJSPlugin))) took 104.2539ms
[debug] [Loading] Done in C:\Users\guzzm\Desktop\rumble-ball, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 4622.2807ms
[debug]     Load.loadUnit: cleanEvalClasses took 39.8706ms
[debug]   Load.loadUnit(file:/C:/Users/guzzm/Desktop/rumble-ball/, ...) took 18357.6224ms
[debug] Load.apply: load took 18401.3865ms
[debug] Load.apply: resolveProjects took 0.2924ms
[debug] Load.apply: finalTransforms took 72.4176ms
[debug] Load.apply: config.delegates took 0.6634ms
[debug] Load.apply: Def.make(settings)... took 687.6784ms
[debug] Load.apply: structureIndex took 102.1451ms
[debug] Load.apply: mkStreams took 0.0034ms
[info] set current project to rumble-ball (in build file:/C:/Users/guzzm/Desktop/rumble-ball/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * root / mainClass
[warn]   +- C:\Users\guzzm\Desktop\rumble-ball\build.sbt:22
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
